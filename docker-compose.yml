version: '3'
services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      # This would expose 9092 for external connections to the broker
      # Use kafka:29092 for connections internal on the docker network
      # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry:7.3.0
    depends_on:
      - kafka
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:29092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: WARN
      SCHEMA_REGISTRY_SCHEMA_COMPATIBILITY_LEVEL: none
    ports:
      - 8081:8081

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - kafka
      - schema-registry
    ports:
      - 9021:9021
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:29092'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  gomxml-producer:
    container_name: gomxml-producer
    image: kensobi/gomxml-producer
    build:
      context: .
      dockerfile: producer.Dockerfile
    restart: always
    volumes:
      - d:\Processing:/processing
      - d:\Processing\archive:/archive
    environment:
      Kafka__ProducerSettings__BootstrapServers: kafka:29092
      Kafka__Topic: dev.kenso.gom.xml
      Kafka__SchemaRegistries: http://schema-registry:8081
      Kafka__NumPartitions: 2
      Kafka__ReplicationFactor: 1

  gomxml-pgSubscriber:
    container_name: gomxml-pgsubscriber
    image: kensobi/gomxml-pgsubscriber
    build:
      context: .
      dockerfile: pgSubscriber.Dockerfile
    restart: always
    environment:
      ConnectionString: "Host=postgres;Port=5432;Database=kensobi;Username=kensobi;Password=kensobiuser"
      Kafka__BootstrapServers: kafka:29092
      Kafka__Topic: dev.kenso.gom.xml
      Kafka__SchemaRegistries: http://schema-registry:8081
      Kafka__GroupId: dev-gom

  postgres:
    image: kensobi/postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=kensobi
      - POSTGRES_PASSWORD=kensobiuser
      - POSTGRES_DB=kensobi
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
